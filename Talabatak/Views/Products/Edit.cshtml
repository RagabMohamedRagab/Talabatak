@model Talabatak.Models.ViewModels.EditProductVM
@{
    ViewBag.Title = "تعديل المنتج " + Model.NameAr;
    var Stores = ViewBag.Stores as List<Talabatak.Models.Domains.Store>;
    var Images = ViewBag.Images as List<Talabatak.Models.Domains.ProductImage>;
    var Sizes = ViewBag.Sizes as List<Talabatak.Models.Domains.ProductSize>;
}
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title"><i class="fa fa-fw fa-plus"></i> @ViewBag.Title</h3>
    </div>
    <div class="panel-body">
        <div id="accordion" class="panel-group" aria-multiselectable="true" role="tablist">
            <div class="panel panel-success">
                <div id="collapseOne" class="panel-collapse" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body">
                        <p>الحقول بعلامه ( <span class="text-red">*</span> ) مطلوبة.</p>
                        <hr />
                        <div id="model-errors" style="display:none;">
                            <ul class="text-danger" id="ul-errors"></ul>
                            <hr />
                        </div>
                        @using (Ajax.BeginForm("Edit", "Products", new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnFailure = "OnFailure", LoadingElementId = "loader" }, new { enctype = "multipart/form-data" }))
                        {
                            <input hidden name="ProductId" value="@Model.ProductId" />
                            <div class="row" style="margin:10px;">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="StoreId" class="col-sm-5 control-label required">المنجر: </label>
                                        <div class="col-sm-7">
                                            @Html.DropDownListFor(d => d.StoreId, new SelectList(Stores, "Id", "NameAr", Model.StoreId), new { @class = "form-control select2", required = true })
                                            @Html.ValidationMessageFor(d => d.StoreId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="CategoryId" class="col-sm-5 control-label required">القسم او الفئه: </label>
                                        <div class="col-sm-7">
                                            @Html.DropDownListFor(s => s.CategoryId, new SelectList(ViewBag.Categories, "Id", "NameAr", Model.CategoryId), new { @class = "form-control", required = true })
                                            @Html.ValidationMessageFor(d => d.CategoryId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <hr />

                            <div class="row" style="margin:10px;">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="NameAr" class="col-sm-5 control-label required">اسم المنتج بالعربى: </label>
                                        <div class="col-sm-7">
                                            @Html.EditorFor(model => model.NameAr, new { htmlAttributes = new { @class = "form-control valid", required = true } })
                                            @Html.ValidationMessageFor(d => d.NameAr, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="NameEn" class="col-sm-5 control-label required">اسم المنتج بالانجليزى:</label>
                                        <div class="col-sm-7">
                                            @Html.EditorFor(model => model.NameEn, new { htmlAttributes = new { @class = "form-control valid text-left", required = true } })
                                            @Html.ValidationMessageFor(d => d.NameEn, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row" style="margin:10px">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="DescriptionAr" class="col-sm-5 control-label">وصف المنتج بالعربى:</label>
                                        <div class="col-sm-7">
                                            @Html.TextAreaFor(model => model.DescriptionAr, htmlAttributes: new { @class = "form-control", rows = 7 })
                                            @Html.ValidationMessageFor(d => d.DescriptionAr, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="DescriptionEn" class="col-sm-5 control-label">وصف المنتج بالانجليزى:</label>
                                        <div class="col-sm-7">
                                            @Html.TextAreaFor(model => model.DescriptionEn, htmlAttributes: new { @class = "form-control", rows = 7 })
                                            @Html.ValidationMessageFor(d => d.DescriptionEn, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            if (Images != null && Images.Count() > 0)
                            {
                                <div class="row" style="margin:10px;">
                                    @foreach (var image in Images)
                                    {
                                        <div class="col-lg-4" id="div-image-@image.Id">
                                            <a target="_blank" href="~/Content/Images/Products/@image.ImageUrl"><img width="200" src="~/Content/Images/Products/@image.ImageUrl" /></a>
                                            <button type="button" class="btn btn-danger btn-sm" onclick="DeleteImage(@image.Id)"><i class="fa fa-times"></i></button>
                                        </div>
                                    }
                                </div>
                            }

                    <div class="row" style="margin:10px">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="Images" class="col-sm-5 control-label">اضافه صور للمنتج:</label>
                                <div class="col-sm-7">
                                    <p>بامكانك اختيار اكثر من صوره</p>
                                    <input name="Images" id="Images" type="file" accept="image/*" multiple />
                                    @Html.ValidationMessageFor(d => d.Images, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="DescriptionEn" class="col-sm-5 control-label">الموجود بالمخزن:</label>
                                <div class="col-sm-4">
                                    @Html.EditorFor(model => model.Inventory, new { htmlAttributes = new { @class = "form-control valid", required = true } })
                                    @Html.ValidationMessageFor(d => d.Inventory, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                            <hr />
                            <div class="row" style="margin:10px">
                                <p>- اذا كان المنتج بدون احجام مختلفه ، برجاء كتابة سعر المنتج فى الحقل التالى</p>
                                <p>- فى حاله ما اذا كان هناك خصم ، برجاء كتابه السعر قبل وبعد ، فى حاله عدم وجود خصم برجاء ترك سعر المنتج بعد الخصم فارغاً</p>
                            </div>

                            <div class="row" style="margin:10px; display:none">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="OriginalPrices" class="col-sm-5 control-label required">سعر المنتج الطبيعى:</label>
                                        <div class="col-sm-7">
                                            @Html.EditorFor(model => model.SingleOriginalPrice, new { htmlAttributes = new { @class = "form-control valid", type = "number", step = "any" } })
                                            @Html.ValidationMessageFor(d => d.OriginalPrices, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="SingleOfferPrice" class="col-sm-5 control-label">سعر المنتج بعد الخصم:</label>
                                        <div class="col-sm-7">
                                            @Html.EditorFor(model => model.SingleOfferPrice, new { htmlAttributes = new { @class = "form-control valid", type = "number", step = "any" } })
                                            @Html.ValidationMessageFor(d => d.SingleOfferPrice, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin:10px;">

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="OriginalPrices" class="col-sm-5 control-label required">العملة:</label>
                                        <div class="col-sm-7">
                                            @Html.EditorFor(model => model.CurrencyAr, new { htmlAttributes = new { @class = "form-control valid" } })
                                            @Html.ValidationMessageFor(d => d.CurrencyAr, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="SingleOfferPrice" class="col-sm-5 control-label">العملة بالانجليزي:</label>
                                        <div class="col-sm-7">
                                            @Html.EditorFor(model => model.Currency, new { htmlAttributes = new { @class = "form-control valid" } })
                                            @Html.ValidationMessageFor(d => d.Currency, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row" style="margin:10px;">
                                @if (Sizes != null && Sizes.Count() > 0)
                                {
                                    <div class="col-lg-12">
                                        <p>الاحجام الحاليه:</p>
                                        <ul>
                                            @foreach (var size in Sizes)
                                            {
                                                <li id="li-size-@size.Id">
                                                    @if (size.OfferPrice.HasValue == true)
                                                    {
                                                        <span>@size.SizeAr بسعر @size.OriginalPrice جنيه قبل الخصم و @size.OfferPrice جنيه بعد الخصم</span>
                                                    }
                                                    else
                                                    {
                                                        <span>@size.SizeAr بسعر @size.OriginalPrice جنيه</span>
                                                    }
                                                    <button type="button" class="btn btn-danger btn-sm" onclick="DeleteSize(@size.Id)"><i class="fa fa-times"></i></button>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                }
                                <div class="col-lg-12">
                                    <p>- اذا كان المنتج يتكون من عده احجام ، برجاء كتابه اسم الحجم باللغتين وسعر كل حجم</p>
                                    <p>- اذا كان هناك خصم على حجم معين ، يرجى كتابه السعر قبل وبعد ، اما فى حاله عدم وجود خصم برجاء ترك السعر بعد فارغاً</p>
                                    <button class="btn btn-primary" type="button" onclick="AddSizeRow()" style="margin:0px 5px"><i class="fa fa-plus"></i> اضافه حجم</button>
                                    <div class="sizes-field-wrapper"></div>
                                    <hr />
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success" id="add-product-btn">حفظ المنتج <i class="fa fa-spinner fa-spin" id="loader" style="display:none;"></i></button>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div>
            @Html.ActionLink("العودة", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#StoreId").change(function () {
            var Id = $(this).val();
            $.ajax({
                url: "@Url.Action("GetCategories", "Products")",
                type: "GET",
                data: { StoreId: Id },
                success: function (results) {
                    $("#CategoryId").empty();
                    if (results.Data.length > 0) {
                        for (var i = 0; i < results.Data.length; i++) {
                            $("#CategoryId").append("<option value='" + results.Data[i].Id + "'>" + results.Data[i].NameAr + "</option>")
                        }
                    }
                    else {
                        $("#CategoryId").append("<option value>لا توجد اقسام متاحه</option>")
                    }
                }
            })
        })
        function DeleteImage(Id) {
            debugger
            $.ajax({
                url: "@Url.Action("DeleteImage", "Products")",
                type: "DELETE",
                data: { ImageId: Id },
                success: function (results) {
                    $("#div-image-" + Id).remove();
                }
            })
        }
        function DeleteSize(Id) {
            debugger
            $.ajax({
                url: "@Url.Action("DeleteSize", "Products")",
                type: "DELETE",
                data: { SizeId: Id },
                success: function (results) {
                    $("#li-size-" + Id).remove();
                }
            })
        }
    </script>
    <script type="text/javascript">
        function OnBegin() {
            $("#model-errors").hide();
            $("#ul-errors").empty();
            $("#add-product-btn").attr("disabled", true);
        }
        function OnSuccess(results) {
            if (results.Success == true) {
                toastr.success("تم حفظ المنتج بنجاح ، برجاء الانتظار");
                window.location.href = "/Products?StoreId=" + results.StoreId;
            }
            else {
                for (var i = 0; i < results.Errors.length; i++) {
                    $("#ul-errors").append("<li>" + results.Errors[i] + "</li>");
                }
                toastr.error("يوجد أخطاء ، برجاء المراجعه فى اعلى الصفحه");
                $("#model-errors").show();
                $("#add-product-btn").attr("disabled", false);
                $("#cover-spin").hide();
            }
        }
        function OnFailure(data) {
            alert("حدث خطأ ما، برجاء المحاوله لاحقاً");
        }
    </script>

    <script type="text/javascript">
        $(function () {
            var size_wrapper = $('.sizes-field-wrapper');
            $(size_wrapper).on('click', '.size_remove_button', function (e) {
                e.preventDefault();
                $(this).parent('div').parent('div').remove().remove();
            });
        })
        function AddSizeRow() {
            var wrapper = $('.sizes-field-wrapper');
            var fieldHTML = '<div> <br><div class="col-lg-5" style="margin-bottom:10px"> <div class="form-group"> <label class="col-sm-5 control-label required">الحجم بالعربى: </label> <div class="col-sm-7"><input type="text" required="" name="SizesAr[]" class="form-control"></div></div></div><div class="col-lg-5" style="margin-bottom:10px"> <div class="form-group"> <label class="col-sm-5 control-label required">الحجم بالانجليزى: </label> <div class="col-sm-7"><input type="text" required="" name="SizesEn[]" class="form-control"></div></div></div><div class="col-lg-2" style="margin-bottom:10px"><button type="button" class="btn btn-danger size_remove_button"><i class="fa fa-times"></i></button></div><div class="row" style="margin:10px;"> <div class="col-lg-5"> <div class="form-group"> <label class="col-sm-5 control-label required">السعر:</label> <div class="col-sm-7"> <div class="input-group"> <input name="OriginalPrices[]" class="form-control valid" type="number" step="any" required=""> <span class="input-group-addon">جنيه</span> </div></div></div></div><div class="col-lg-5"> <div class="form-group"> <label class="col-sm-5 control-label">السعر بعد الخصم:</label> <div class="col-sm-7"> <div class="input-group"> <input name="OfferPrices[]" class="form-control valid" type="number" step="any"> <span class="input-group-addon">جنيه</span> </div></div></div></div></div><hr /></div>'; //New input field html
            $(wrapper).append(fieldHTML);
        }
    </script>
}
